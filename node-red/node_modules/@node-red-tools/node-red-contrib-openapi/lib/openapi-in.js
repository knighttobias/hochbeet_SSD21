"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var helpers_1 = require("./helpers");
var queue_1 = require("./queue");
var route_1 = require("./route");
module.exports = function register(RED) {
    RED.nodes.registerType('openapi-in', function openapiNode(props) {
        var _this = this;
        RED.nodes.createNode(this, props);
        if (!props.schema) {
            this.error('Schema not set');
            return;
        }
        if (!props.operation) {
            this.error('Operation not set');
            return;
        }
        this.schema = props.schema;
        this.operation = props.operation;
        var schema = helpers_1.findSchema(RED, this.schema);
        if (!schema) {
            this.error("Schema not found: " + this.schema);
            return;
        }
        var lazyRouter = helpers_1.findRouter(RED, this.schema);
        if (!lazyRouter) {
            this.error("Schema not found: " + this.schema);
            return;
        }
        lazyRouter(function (r) {
            _this.on('close', route_1.openApiRoute({
                schema: schema,
                router: r,
                operation: _this.operation,
                handler: function (req, res, next) {
                    var id = queue_1.enqueue(req, res, next);
                    var msg = {
                        ___openapiReqID: id,
                        cookies: req.cookies,
                        headers: req.headers,
                        params: req.params,
                        path: req.path,
                        payload: req.body,
                        query: req.query,
                        url: req.url,
                    };
                    _this.send(msg);
                },
            }));
        });
    });
};
