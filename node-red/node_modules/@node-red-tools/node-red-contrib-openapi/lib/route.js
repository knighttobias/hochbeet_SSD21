"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function toExpressParams(part) {
    return part.replace(/\{([^}]+)}/g, ':$1');
}
function getOperation(schema, op) {
    var res;
    var found = false;
    for (var pathKey in schema.paths) {
        if (found) {
            break;
        }
        var pathObject = schema.paths[pathKey];
        for (var method in pathObject) {
            var definition = pathObject[method];
            if (definition.operationId === op) {
                res = {
                    method: method,
                    schema: definition,
                    path: pathKey,
                    expressPath: toExpressParams(pathKey),
                    pathSchema: pathObject,
                };
                found = true;
            }
        }
    }
    return res;
}
function openApiRoute(props) {
    var router = props.router, schema = props.schema, operation = props.operation, handler = props.handler;
    var spec = getOperation(schema, operation);
    if (!spec) {
        throw new Error("Invalid operation name: " + operation);
    }
    var route = router[spec.method];
    if (typeof route !== 'function') {
        throw new Error("Invalid method name: " + operation + "." + spec.method);
    }
    var expressPath = spec.path
        .substring(1)
        .split('/')
        .map(toExpressParams)
        .join('/');
    route.call(router, "/" + expressPath, handler);
    return function () {
        router.stack.forEach(function (route, i, routes) {
            if (route.handle === router) {
                routes.splice(i, 1);
            }
        });
    };
}
exports.openApiRoute = openApiRoute;
